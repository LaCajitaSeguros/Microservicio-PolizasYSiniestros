// <auto-generated />
using Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"));

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marca");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            NombreMarca = "Fiat"
                        },
                        new
                        {
                            MarcaId = 2,
                            NombreMarca = "Ford"
                        },
                        new
                        {
                            MarcaId = 3,
                            NombreMarca = "BMW"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Modelo", b =>
                {
                    b.Property<int>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModeloId"));

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeloId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelo");

                    b.HasData(
                        new
                        {
                            ModeloId = 1,
                            MarcaId = 1,
                            NombreModelo = "Siena"
                        },
                        new
                        {
                            ModeloId = 2,
                            MarcaId = 1,
                            NombreModelo = "Uno"
                        },
                        new
                        {
                            ModeloId = 3,
                            MarcaId = 1,
                            NombreModelo = "Palio"
                        },
                        new
                        {
                            ModeloId = 4,
                            MarcaId = 2,
                            NombreModelo = "Fiesta"
                        },
                        new
                        {
                            ModeloId = 5,
                            MarcaId = 2,
                            NombreModelo = "Ranger"
                        },
                        new
                        {
                            ModeloId = 6,
                            MarcaId = 2,
                            NombreModelo = "Focus"
                        },
                        new
                        {
                            ModeloId = 7,
                            MarcaId = 3,
                            NombreModelo = "320"
                        },
                        new
                        {
                            ModeloId = 8,
                            MarcaId = 3,
                            NombreModelo = "530"
                        },
                        new
                        {
                            ModeloId = 9,
                            MarcaId = 3,
                            NombreModelo = "750"
                        });
                });

            modelBuilder.Entity("Domain.Entities.VersionVehiculo", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionId"));

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("NombreVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VersionId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Version");

                    b.HasData(
                        new
                        {
                            VersionId = 1,
                            ModeloId = 1,
                            NombreVersion = "1.4 Fire",
                            PrecioBase = 5200000m
                        },
                        new
                        {
                            VersionId = 2,
                            ModeloId = 1,
                            NombreVersion = "1.4 Fire Way",
                            PrecioBase = 6700000m
                        },
                        new
                        {
                            VersionId = 3,
                            ModeloId = 1,
                            NombreVersion = "1.7 ELX TD L/N",
                            PrecioBase = 3600000m
                        },
                        new
                        {
                            VersionId = 4,
                            ModeloId = 2,
                            NombreVersion = "Cargo 1.3 Fire",
                            PrecioBase = 3200000m
                        },
                        new
                        {
                            VersionId = 5,
                            ModeloId = 2,
                            NombreVersion = "Fire 1.3 3P LN",
                            PrecioBase = 4500000m
                        },
                        new
                        {
                            VersionId = 6,
                            ModeloId = 2,
                            NombreVersion = "Fire 1.3 5P LN Pack C II",
                            PrecioBase = 8500000m
                        },
                        new
                        {
                            VersionId = 7,
                            ModeloId = 3,
                            NombreVersion = "WE 1.8 Adventure",
                            PrecioBase = 6487999m
                        },
                        new
                        {
                            VersionId = 8,
                            ModeloId = 3,
                            NombreVersion = "1.4 3P ELX Active",
                            PrecioBase = 8000000m
                        },
                        new
                        {
                            VersionId = 9,
                            ModeloId = 3,
                            NombreVersion = "WE 1.7 TD Adventure X-Treme",
                            PrecioBase = 4500000m
                        },
                        new
                        {
                            VersionId = 10,
                            ModeloId = 4,
                            NombreVersion = "1.6 5P Energy",
                            PrecioBase = 12900000m
                        },
                        new
                        {
                            VersionId = 11,
                            ModeloId = 4,
                            NombreVersion = "1.4 5P Edge TDCI",
                            PrecioBase = 5000000m
                        },
                        new
                        {
                            VersionId = 12,
                            ModeloId = 4,
                            NombreVersion = "Max 1.4 4P Ambiente TDCI",
                            PrecioBase = 5200000m
                        },
                        new
                        {
                            VersionId = 13,
                            ModeloId = 5,
                            NombreVersion = "2.3 DC 4X2 L/05 XL Plus",
                            PrecioBase = 12600000m
                        },
                        new
                        {
                            VersionId = 14,
                            ModeloId = 5,
                            NombreVersion = "3.0 TDI DC 4x2 L/06 XL",
                            PrecioBase = 58500000m
                        },
                        new
                        {
                            VersionId = 15,
                            ModeloId = 5,
                            NombreVersion = "3.0 Cd Xl Plus",
                            PrecioBase = 9800000m
                        },
                        new
                        {
                            VersionId = 16,
                            ModeloId = 6,
                            NombreVersion = "2.0 Se Plus At6",
                            PrecioBase = 8933000m
                        },
                        new
                        {
                            VersionId = 17,
                            ModeloId = 6,
                            NombreVersion = "1.6 S",
                            PrecioBase = 12000000m
                        },
                        new
                        {
                            VersionId = 18,
                            ModeloId = 6,
                            NombreVersion = "2.0 Se Plus At",
                            PrecioBase = 10610000m
                        },
                        new
                        {
                            VersionId = 19,
                            ModeloId = 7,
                            NombreVersion = "2.0 320i Sedan 184cv",
                            PrecioBase = 34900000m
                        },
                        new
                        {
                            VersionId = 20,
                            ModeloId = 7,
                            NombreVersion = "2.0 320i Sedan Executive",
                            PrecioBase = 19900000m
                        },
                        new
                        {
                            VersionId = 21,
                            ModeloId = 7,
                            NombreVersion = "2.0 Sdrive 20i Sportline 192cv",
                            PrecioBase = 45000000m
                        },
                        new
                        {
                            VersionId = 22,
                            ModeloId = 8,
                            NombreVersion = "3.0 530ia Sportline Sedan",
                            PrecioBase = 82900000m
                        },
                        new
                        {
                            VersionId = 23,
                            ModeloId = 8,
                            NombreVersion = "3.0 530ia Executive 258cv",
                            PrecioBase = 17000000m
                        },
                        new
                        {
                            VersionId = 24,
                            ModeloId = 8,
                            NombreVersion = "3.0 530ia Sportline",
                            PrecioBase = 47900000m
                        },
                        new
                        {
                            VersionId = 25,
                            ModeloId = 9,
                            NombreVersion = "Serie 7 4.8 750i Premium 407cv",
                            PrecioBase = 38000000m
                        },
                        new
                        {
                            VersionId = 26,
                            ModeloId = 9,
                            NombreVersion = "erie 7 4.8 750ia Premium Stept",
                            PrecioBase = 38000000m
                        },
                        new
                        {
                            VersionId = 27,
                            ModeloId = 9,
                            NombreVersion = "750i ",
                            PrecioBase = 150000000m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Modelo", b =>
                {
                    b.HasOne("Domain.Entities.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Domain.Entities.VersionVehiculo", b =>
                {
                    b.HasOne("Domain.Entities.Modelo", "Modelo")
                        .WithMany("vehiculoVersiones")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Domain.Entities.Modelo", b =>
                {
                    b.Navigation("vehiculoVersiones");
                });
#pragma warning restore 612, 618
        }
    }
}
